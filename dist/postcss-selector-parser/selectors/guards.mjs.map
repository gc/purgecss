{
  "version": 3,
  "sources": ["../../../src/postcss-selector-parser/selectors/types.js", "../../../src/postcss-selector-parser/selectors/guards.js"],
  "sourcesContent": ["export const TAG = 'tag';\nexport const STRING = 'string';\nexport const SELECTOR = 'selector';\nexport const ROOT = 'root';\nexport const PSEUDO = 'pseudo';\nexport const NESTING = 'nesting';\nexport const ID = 'id';\nexport const COMMENT = 'comment';\nexport const COMBINATOR = 'combinator';\nexport const CLASS = 'class';\nexport const ATTRIBUTE = 'attribute';\nexport const UNIVERSAL = 'universal';\n", "import {\n    ATTRIBUTE,\n    CLASS,\n    COMBINATOR,\n    COMMENT,\n    ID,\n    NESTING,\n    PSEUDO,\n    ROOT,\n    SELECTOR,\n    STRING,\n    TAG,\n    UNIVERSAL,\n} from \"./types\";\n\nconst IS_TYPE = {\n    [ATTRIBUTE]: true,\n    [CLASS]: true,\n    [COMBINATOR]: true,\n    [COMMENT]: true,\n    [ID]: true,\n    [NESTING]: true,\n    [PSEUDO]: true,\n    [ROOT]: true,\n    [SELECTOR]: true,\n    [STRING]: true,\n    [TAG]: true,\n    [UNIVERSAL]: true,\n};\n\nexport function isNode (node) {\n    return (typeof node === \"object\" && IS_TYPE[node.type]);\n}\n\nfunction isNodeType (type, node) {\n    return isNode(node) && node.type === type;\n}\n\nexport const isAttribute = isNodeType.bind(null, ATTRIBUTE);\nexport const isClassName = isNodeType.bind(null, CLASS);\nexport const isCombinator = isNodeType.bind(null, COMBINATOR);\nexport const isComment = isNodeType.bind(null, COMMENT);\nexport const isIdentifier = isNodeType.bind(null, ID);\nexport const isNesting = isNodeType.bind(null, NESTING);\nexport const isPseudo = isNodeType.bind(null, PSEUDO);\nexport const isRoot = isNodeType.bind(null, ROOT);\nexport const isSelector = isNodeType.bind(null, SELECTOR);\nexport const isString = isNodeType.bind(null, STRING);\nexport const isTag = isNodeType.bind(null, TAG);\nexport const isUniversal = isNodeType.bind(null, UNIVERSAL);\n\nexport function isPseudoElement (node) {\n    return isPseudo(node)\n           && node.value\n           && (\n               node.value.startsWith(\"::\")\n             || node.value.toLowerCase() === \":before\"\n             || node.value.toLowerCase() === \":after\"\n             || node.value.toLowerCase() === \":first-letter\"\n             || node.value.toLowerCase() === \":first-line\"\n           );\n}\nexport function isPseudoClass (node) {\n    return isPseudo(node) && !isPseudoElement(node);\n}\n\nexport function isContainer (node) {\n    return !!(isNode(node) && node.walk);\n}\n\nexport function isNamespace (node) {\n    return isAttribute(node) || isTag(node);\n}\n"],
  "mappings": ";;;;AAAO,IAAM,MAAM;AACZ,IAAM,SAAS;AACf,IAAM,WAAW;AACjB,IAAM,OAAO;AACb,IAAM,SAAS;AACf,IAAM,UAAU;AAChB,IAAM,KAAK;AACX,IAAM,UAAU;AAChB,IAAM,aAAa;AACnB,IAAM,QAAQ;AACd,IAAM,YAAY;AAClB,IAAM,YAAY;;;ACIzB,IAAM,UAAU;AAAA,EACZ,CAAC,SAAS,GAAG;AAAA,EACb,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,UAAU,GAAG;AAAA,EACd,CAAC,OAAO,GAAG;AAAA,EACX,CAAC,EAAE,GAAG;AAAA,EACN,CAAC,OAAO,GAAG;AAAA,EACX,CAAC,MAAM,GAAG;AAAA,EACV,CAAC,IAAI,GAAG;AAAA,EACR,CAAC,QAAQ,GAAG;AAAA,EACZ,CAAC,MAAM,GAAG;AAAA,EACV,CAAC,GAAG,GAAG;AAAA,EACP,CAAC,SAAS,GAAG;AACjB;AAEO,SAAS,OAAQ,MAAM;AAC1B,SAAQ,OAAO,SAAS,YAAY,QAAQ,KAAK,IAAI;AACzD;AAFgB;AAIhB,SAAS,WAAY,MAAM,MAAM;AAC7B,SAAO,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC;AAFS;AAIF,IAAM,cAAc,WAAW,KAAK,MAAM,SAAS;AACnD,IAAM,cAAc,WAAW,KAAK,MAAM,KAAK;AAC/C,IAAM,eAAe,WAAW,KAAK,MAAM,UAAU;AACrD,IAAM,YAAY,WAAW,KAAK,MAAM,OAAO;AAC/C,IAAM,eAAe,WAAW,KAAK,MAAM,EAAE;AAC7C,IAAM,YAAY,WAAW,KAAK,MAAM,OAAO;AAC/C,IAAM,WAAW,WAAW,KAAK,MAAM,MAAM;AAC7C,IAAM,SAAS,WAAW,KAAK,MAAM,IAAI;AACzC,IAAM,aAAa,WAAW,KAAK,MAAM,QAAQ;AACjD,IAAM,WAAW,WAAW,KAAK,MAAM,MAAM;AAC7C,IAAM,QAAQ,WAAW,KAAK,MAAM,GAAG;AACvC,IAAM,cAAc,WAAW,KAAK,MAAM,SAAS;AAEnD,SAAS,gBAAiB,MAAM;AACnC,SAAO,SAAS,IAAI,KACV,KAAK,UAEJ,KAAK,MAAM,WAAW,IAAI,KACzB,KAAK,MAAM,YAAY,MAAM,aAC7B,KAAK,MAAM,YAAY,MAAM,YAC7B,KAAK,MAAM,YAAY,MAAM,mBAC7B,KAAK,MAAM,YAAY,MAAM;AAE7C;AAVgB;AAWT,SAAS,cAAe,MAAM;AACjC,SAAO,SAAS,IAAI,KAAK,CAAC,gBAAgB,IAAI;AAClD;AAFgB;AAIT,SAAS,YAAa,MAAM;AAC/B,SAAO,CAAC,EAAE,OAAO,IAAI,KAAK,KAAK;AACnC;AAFgB;AAIT,SAAS,YAAa,MAAM;AAC/B,SAAO,YAAY,IAAI,KAAK,MAAM,IAAI;AAC1C;AAFgB;",
  "names": []
}
