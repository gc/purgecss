{
  "version": 3,
  "sources": ["../../../src/postcss-selector-parser/selectors/types.js", "../../../src/postcss-selector-parser/selectors/guards.js"],
  "sourcesContent": ["export const TAG = 'tag';\r\nexport const STRING = 'string';\r\nexport const SELECTOR = 'selector';\r\nexport const ROOT = 'root';\r\nexport const PSEUDO = 'pseudo';\r\nexport const NESTING = 'nesting';\r\nexport const ID = 'id';\r\nexport const COMMENT = 'comment';\r\nexport const COMBINATOR = 'combinator';\r\nexport const CLASS = 'class';\r\nexport const ATTRIBUTE = 'attribute';\r\nexport const UNIVERSAL = 'universal';\r\n", "import { ATTRIBUTE, CLASS, COMBINATOR, COMMENT, ID, NESTING, PSEUDO, ROOT, SELECTOR, STRING, TAG, UNIVERSAL, } from \"./types\";\r\nconst IS_TYPE = {\r\n    [ATTRIBUTE]: true,\r\n    [CLASS]: true,\r\n    [COMBINATOR]: true,\r\n    [COMMENT]: true,\r\n    [ID]: true,\r\n    [NESTING]: true,\r\n    [PSEUDO]: true,\r\n    [ROOT]: true,\r\n    [SELECTOR]: true,\r\n    [STRING]: true,\r\n    [TAG]: true,\r\n    [UNIVERSAL]: true,\r\n};\r\nexport function isNode(node) {\r\n    return (typeof node === \"object\" && IS_TYPE[node.type]);\r\n}\r\nfunction isNodeType(type, node) {\r\n    return isNode(node) && node.type === type;\r\n}\r\nexport const isAttribute = isNodeType.bind(null, ATTRIBUTE);\r\nexport const isClassName = isNodeType.bind(null, CLASS);\r\nexport const isCombinator = isNodeType.bind(null, COMBINATOR);\r\nexport const isComment = isNodeType.bind(null, COMMENT);\r\nexport const isIdentifier = isNodeType.bind(null, ID);\r\nexport const isNesting = isNodeType.bind(null, NESTING);\r\nexport const isPseudo = isNodeType.bind(null, PSEUDO);\r\nexport const isRoot = isNodeType.bind(null, ROOT);\r\nexport const isSelector = isNodeType.bind(null, SELECTOR);\r\nexport const isString = isNodeType.bind(null, STRING);\r\nexport const isTag = isNodeType.bind(null, TAG);\r\nexport const isUniversal = isNodeType.bind(null, UNIVERSAL);\r\nexport function isPseudoElement(node) {\r\n    return isPseudo(node)\r\n        && node.value\r\n        && (node.value.startsWith(\"::\")\r\n            || node.value.toLowerCase() === \":before\"\r\n            || node.value.toLowerCase() === \":after\"\r\n            || node.value.toLowerCase() === \":first-letter\"\r\n            || node.value.toLowerCase() === \":first-line\");\r\n}\r\nexport function isPseudoClass(node) {\r\n    return isPseudo(node) && !isPseudoElement(node);\r\n}\r\nexport function isContainer(node) {\r\n    return !!(isNode(node) && node.walk);\r\n}\r\nexport function isNamespace(node) {\r\n    return isAttribute(node) || isTag(node);\r\n}\r\n"],
  "mappings": ";;;;AAAO,IAAM,MAAM;AACZ,IAAM,SAAS;AACf,IAAM,WAAW;AACjB,IAAM,OAAO;AACb,IAAM,SAAS;AACf,IAAM,UAAU;AAChB,IAAM,KAAK;AACX,IAAM,UAAU;AAChB,IAAM,aAAa;AACnB,IAAM,QAAQ;AACd,IAAM,YAAY;AAClB,IAAM,YAAY;;;ACVzB,IAAM,UAAU;AAAA,EACZ,CAAC,SAAS,GAAG;AAAA,EACb,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,UAAU,GAAG;AAAA,EACd,CAAC,OAAO,GAAG;AAAA,EACX,CAAC,EAAE,GAAG;AAAA,EACN,CAAC,OAAO,GAAG;AAAA,EACX,CAAC,MAAM,GAAG;AAAA,EACV,CAAC,IAAI,GAAG;AAAA,EACR,CAAC,QAAQ,GAAG;AAAA,EACZ,CAAC,MAAM,GAAG;AAAA,EACV,CAAC,GAAG,GAAG;AAAA,EACP,CAAC,SAAS,GAAG;AACjB;AACO,SAAS,OAAO,MAAM;AACzB,SAAQ,OAAO,SAAS,YAAY,QAAQ,KAAK,IAAI;AACzD;AAFgB;AAGhB,SAAS,WAAW,MAAM,MAAM;AAC5B,SAAO,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC;AAFS;AAGF,IAAM,cAAc,WAAW,KAAK,MAAM,SAAS;AACnD,IAAM,cAAc,WAAW,KAAK,MAAM,KAAK;AAC/C,IAAM,eAAe,WAAW,KAAK,MAAM,UAAU;AACrD,IAAM,YAAY,WAAW,KAAK,MAAM,OAAO;AAC/C,IAAM,eAAe,WAAW,KAAK,MAAM,EAAE;AAC7C,IAAM,YAAY,WAAW,KAAK,MAAM,OAAO;AAC/C,IAAM,WAAW,WAAW,KAAK,MAAM,MAAM;AAC7C,IAAM,SAAS,WAAW,KAAK,MAAM,IAAI;AACzC,IAAM,aAAa,WAAW,KAAK,MAAM,QAAQ;AACjD,IAAM,WAAW,WAAW,KAAK,MAAM,MAAM;AAC7C,IAAM,QAAQ,WAAW,KAAK,MAAM,GAAG;AACvC,IAAM,cAAc,WAAW,KAAK,MAAM,SAAS;AACnD,SAAS,gBAAgB,MAAM;AAClC,SAAO,SAAS,IAAI,KACb,KAAK,UACJ,KAAK,MAAM,WAAW,IAAI,KACvB,KAAK,MAAM,YAAY,MAAM,aAC7B,KAAK,MAAM,YAAY,MAAM,YAC7B,KAAK,MAAM,YAAY,MAAM,mBAC7B,KAAK,MAAM,YAAY,MAAM;AAC5C;AARgB;AAST,SAAS,cAAc,MAAM;AAChC,SAAO,SAAS,IAAI,KAAK,CAAC,gBAAgB,IAAI;AAClD;AAFgB;AAGT,SAAS,YAAY,MAAM;AAC9B,SAAO,CAAC,EAAE,OAAO,IAAI,KAAK,KAAK;AACnC;AAFgB;AAGT,SAAS,YAAY,MAAM;AAC9B,SAAO,YAAY,IAAI,KAAK,MAAM,IAAI;AAC1C;AAFgB;",
  "names": []
}
