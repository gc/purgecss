{
  "version": 3,
  "sources": ["../../../src/css-tokenizer/code-points/code-points.ts", "../../../src/css-tokenizer/code-points/ranges.ts", "../../../src/css-tokenizer/util/mutations.ts"],
  "sourcesContent": ["/** ' */\nexport const APOSTROPHE = 0x0027;\n/** * */\nexport const ASTERISK = 0x002a;\n/** \\b */\nexport const BACKSPACE = 0x008;\n/** \\r */\nexport const CARRIAGE_RETURN = 0x00d;\n/** \\t */\nexport const CHARACTER_TABULATION = 0x009;\n/** : */\nexport const COLON = 0x003a;\n/** , */\nexport const COMMA = 0x002c;\n/** @ */\nexport const COMMERCIAL_AT = 0x0040;\n/** \\x7F */\nexport const DELETE = 0x007f;\n/** ! */\nexport const EXCLAMATION_MARK = 0x0021;\n/** \\f */\nexport const FORM_FEED = 0x000c;\n/** . */\nexport const FULL_STOP = 0x002e;\n/** > */\nexport const GREATER_THAN_SIGN = 0x003e;\n/** - */\nexport const HYPHEN_MINUS = 0x002d;\n/** \\x1F */\nexport const INFORMATION_SEPARATOR_ONE = 0x001f;\n/** E */\nexport const LATIN_CAPITAL_LETTER_E = 0x0045;\n/** e */\nexport const LATIN_SMALL_LETTER_E = 0x0065;\n/** { */\nexport const LEFT_CURLY_BRACKET = 0x007b;\n/** ( */\nexport const LEFT_PARENTHESIS = 0x0028;\n/** [ */\nexport const LEFT_SQUARE_BRACKET = 0x005b;\n/** < */\nexport const LESS_THAN_SIGN = 0x003c;\n/** \\n */\nexport const LINE_FEED = 0x00a;\n/** \\v */\nexport const LINE_TABULATION = 0x00b;\n/** _ */\nexport const LOW_LINE = 0x005f;\n/** \\x10FFFF */\nexport const MAXIMUM_ALLOWED_CODEPOINT = 0x10FFFF;\n/** \\x00 */\nexport const NULL = 0x000;\n/** # */\nexport const NUMBER_SIGN = 0x0023;\n/** % */\nexport const PERCENTAGE_SIGN = 0x0025;\n/** + */\nexport const PLUS_SIGN = 0x002b;\n/** \" */\nexport const QUOTATION_MARK = 0x0022;\n/** \uFFFD */\nexport const REPLACEMENT_CHARACTER = 0xFFFD;\n/** \\ */\nexport const REVERSE_SOLIDUS = 0x005c;\n/** } */\nexport const RIGHT_CURLY_BRACKET = 0x007d;\n/** ) */\nexport const RIGHT_PARENTHESIS = 0x0029;\n/** ] */\nexport const RIGHT_SQUARE_BRACKET = 0x005d;\n/** ; */\nexport const SEMICOLON = 0x003b;\n/** \\u0E */\nexport const SHIFT_OUT = 0x00e;\n/** / */\nexport const SOLIDUS = 0x002f;\n/** \\u20 */\nexport const SPACE = 0x0020;\n/** u */\nexport const LATIN_SMALL_LETTER_U = 0x0075;\n/** U */\nexport const LATIN_CAPITAL_LETTER_U = 0x0055;\n/** r */\nexport const LATIN_SMALL_LETTER_R = 0x0072;\n/** R */\nexport const LATIN_CAPITAL_LETTER_R = 0x0052;\n/** l */\nexport const LATIN_SMALL_LETTER_L = 0x006c;\n/** L */\nexport const LATIN_CAPITAL_LETTER_L = 0x004c;\n/** ? */\nexport const QUESTION_MARK = 0x003f;\n/** 0 */\nexport const DIGIT_ZERO = 0x0030;\n/** F */\nexport const LATIN_CAPITAL_LETTER_F = 0x0046;\n", "import { BACKSPACE, DELETE, INFORMATION_SEPARATOR_ONE, LINE_TABULATION, LOW_LINE, HYPHEN_MINUS, NULL, SHIFT_OUT, LINE_FEED, CARRIAGE_RETURN, FORM_FEED, SPACE, CHARACTER_TABULATION } from './code-points';\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#tokenizer-definitions\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#digit\nexport function isDigitCodePoint(search: number): boolean {\n\treturn search >= 0x0030 && search <= 0x0039;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#uppercase-letter\nfunction isUppercaseLetterCodePoint(search: number): boolean {\n\treturn search >= 0x0041 && search <= 0x005a;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#lowercase-letter\nfunction isLowercaseLetterCodePoint(search: number): boolean {\n\treturn search >= 0x0061 && search <= 0x007a;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#hex-digit\nexport function isHexDigitCodePoint(search: number): boolean {\n\treturn (\n\t\t(search >= 0x0030 && search <= 0x0039) || // 0 .. 9\n\t\t(search >= 0x0061 && search <= 0x0066) || // a .. f\n\t\t(search >= 0x0041 && search <= 0x0046)    // A .. F\n\t);\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#letter\nfunction isLetterCodePoint(search: number): boolean {\n\treturn isLowercaseLetterCodePoint(search) || isUppercaseLetterCodePoint(search);\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#ident-start-code-point\nexport function isIdentStartCodePoint(search: number): boolean {\n\treturn isLetterCodePoint(search) || isNonASCII_IdentCodePoint(search) || search === LOW_LINE;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#ident-code-point\nexport function isIdentCodePoint(search: number): boolean {\n\treturn isIdentStartCodePoint(search) || isDigitCodePoint(search) || search === HYPHEN_MINUS;\n}\n\n// https://drafts.csswg.org/css-syntax/#non-ascii-ident-code-point\nfunction isNonASCII_IdentCodePoint(search: number): boolean {\n\tif (\n\t\tsearch === 0x00B7 ||\n\t\tsearch === 0x200C ||\n\t\tsearch === 0x200D ||\n\t\tsearch === 0x203F ||\n\t\tsearch === 0x2040 ||\n\t\tsearch === 0x200C\n\t) {\n\t\treturn true;\n\t}\n\n\tif (\n\t\t(0x00C0 <= search && search <= 0x00D6) ||\n\t\t(0x00D8 <= search && search <= 0x00F6) ||\n\t\t(0x00F8 <= search && search <= 0x037D) ||\n\t\t(0x037F <= search && search <= 0x1FFF) ||\n\t\t(0x2070 <= search && search <= 0x218F) ||\n\t\t(0x2C00 <= search && search <= 0x2FEF) ||\n\t\t(0x3001 <= search && search <= 0xD7FF) ||\n\t\t(0xF900 <= search && search <= 0xFDCF) ||\n\t\t(0xFDF0 <= search && search <= 0xFFFD)\n\t) {\n\t\treturn true;\n\t}\n\n\t// Input preprocessing\n\tif (search === 0x000) {\n\t\treturn true;\n\t} else if (isSurrogate(search)) {\n\t\treturn true;\n\t}\n\n\treturn search >= 0x10000;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#non-printable-code-point\nexport function isNonPrintableCodePoint(search: number): boolean {\n\treturn (\n\t\t(search === LINE_TABULATION) ||\n\t\t(search === DELETE) ||\n\t\t(NULL <= search && search <= BACKSPACE) ||\n\t\t(SHIFT_OUT <= search && search <= INFORMATION_SEPARATOR_ONE)\n\t);\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#whitespace\nexport function isNewLine(search: number): boolean {\n\treturn search === LINE_FEED || search === CARRIAGE_RETURN || search === FORM_FEED;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#whitespace\nexport function isWhitespace(search: number): boolean {\n\treturn search === SPACE || search === LINE_FEED || search === CHARACTER_TABULATION || search === CARRIAGE_RETURN || search === FORM_FEED;\n}\n\n// https://infra.spec.whatwg.org/#surrogate\nexport function isSurrogate(search: number): boolean {\n\treturn search >= 0xd800 && search <= 0xdfff;\n}\n", "import { HYPHEN_MINUS } from '../code-points/code-points';\nimport { isHexDigitCodePoint, isIdentCodePoint, isIdentStartCodePoint } from '../code-points/ranges';\nimport type { TokenDimension, TokenIdent } from '../interfaces/token';\n\n/**\n * Set the ident value and update the string representation.\n * This handles escaping.\n */\nexport function mutateIdent(ident: TokenIdent, newValue: string): void {\n\tconst codePoints: Array<number> = [];\n\tfor (const codePoint of newValue) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tcodePoints.push(codePoint.codePointAt(0)!);\n\t}\n\n\tconst result = String.fromCodePoint(...ensureThatValueRoundTripsAsIdent(codePoints));\n\n\tident[1] = result;\n\tident[4].value = newValue;\n}\n\n/**\n * Set the unit and update the string representation.\n * This handles escaping.\n */\nexport function mutateUnit(ident: TokenDimension, newUnit: string): void {\n\tconst codePoints: Array<number> = [];\n\tfor (const codePoint of newUnit) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tcodePoints.push(codePoint.codePointAt(0)!);\n\t}\n\n\tconst escapedCodePoints = ensureThatValueRoundTripsAsIdent(codePoints);\n\tif (escapedCodePoints[0] === 101) { // `e`\n\t\tinsertEscapedCodePoint(escapedCodePoints, 0, escapedCodePoints[0]);\n\t}\n\n\tconst result = String.fromCodePoint(...escapedCodePoints);\n\n\tconst signCharacter = ident[4].signCharacter === '+' ? ident[4].signCharacter : '';\n\tconst numericValue = ident[4].value.toString();\n\n\tident[1] = `${signCharacter}${numericValue}${result}`;\n\tident[4].unit = newUnit;\n}\n\nfunction ensureThatValueRoundTripsAsIdent(codePoints: Array<number>): Array<number> {\n\tlet remainderStartIndex = 0;\n\n\tif (codePoints[0] === HYPHEN_MINUS && codePoints[1] === HYPHEN_MINUS) {\n\t\tremainderStartIndex = 2;\n\t} else if (codePoints[0] === HYPHEN_MINUS && codePoints[1]) {\n\t\tremainderStartIndex = 2;\n\n\t\tif (!isIdentStartCodePoint(codePoints[1])) {\n\t\t\tremainderStartIndex += insertEscapedCodePoint(codePoints, 1, codePoints[1]);\n\t\t}\n\t} else if (isIdentStartCodePoint(codePoints[0])) {\n\t\tremainderStartIndex = 1;\n\t} else {\n\t\tremainderStartIndex = 1;\n\t\tremainderStartIndex += insertEscapedCodePoint(codePoints, 0, codePoints[0]);\n\t}\n\n\tfor (let i = remainderStartIndex; i < codePoints.length; i++) {\n\t\tif (isIdentCodePoint(codePoints[i])) {\n\t\t\tcontinue;\n\t\t}\n\n\t\ti += insertEscapedCodePoint(codePoints, i, codePoints[i]);\n\t}\n\n\treturn codePoints;\n}\n\nfunction insertEscapedCodePoint(codePoints: Array<number>, index: number, codePoint: number): number {\n\tconst hexRepresentation = codePoint.toString(16);\n\tconst codePointsForHexRepresentation: Array<number> = [];\n\n\tfor (const x of hexRepresentation) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tcodePointsForHexRepresentation.push(x.codePointAt(0)!);\n\t}\n\n\tconst next = codePoints[index + 1];\n\tif (\n\t\t(index === codePoints.length - 1) ||\n\t\t(next && isHexDigitCodePoint(next))\n\t) {\n\t\tcodePoints.splice(\n\t\t\tindex,\n\t\t\t1,\n\t\t\t92, // `\\` backslash\n\t\t\t...codePointsForHexRepresentation,\n\t\t\t32, // ` ` space\n\t\t);\n\n\t\treturn 1 + codePointsForHexRepresentation.length;\n\t}\n\n\tcodePoints.splice(\n\t\tindex,\n\t\t1,\n\t\t92, // `\\` backslash\n\t\t...codePointsForHexRepresentation,\n\t);\n\n\treturn codePointsForHexRepresentation.length;\n}\n"],
  "mappings": "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",
  "names": []
}
