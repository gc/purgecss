{
  "version": 3,
  "sources": ["../../../src/css-tokenizer/interfaces/error.ts"],
  "sourcesContent": ["import type { CSSToken } from \"./token\";\n\n/**\n * The CSS Tokenizer is forgiving and will never throw on invalid input.\n * Any errors are reported through the `onParseError` callback.\n */\nexport class ParseError extends Error {\n\t/** The index of the start character of the current token. */\n\tsourceStart: number;\n\t/** The index of the end character of the current token. */\n\tsourceEnd: number;\n\t/** The parser steps that preceded the error. */\n\tparserState: Array<string>;\n\n\tconstructor(message: string, sourceStart: number, sourceEnd: number, parserState: Array<string>) {\n\t\tsuper(message);\n\t\tthis.name = 'ParseError';\n\n\t\tthis.sourceStart = sourceStart;\n\t\tthis.sourceEnd = sourceEnd;\n\t\tthis.parserState = parserState;\n\t}\n}\n\nexport class ParseErrorWithToken extends ParseError {\n\t/** The associated token. */\n\ttoken: CSSToken;\n\n\tconstructor(message: string, sourceStart: number, sourceEnd: number, parserState: Array<string>, token: CSSToken) {\n\t\tsuper(message, sourceStart, sourceEnd, parserState);\n\n\t\tthis.token = token;\n\t}\n}\n\nexport const ParseErrorMessage = {\n\tUnexpectedNewLineInString: 'Unexpected newline while consuming a string token.',\n\tUnexpectedEOFInString: 'Unexpected EOF while consuming a string token.',\n\tUnexpectedEOFInComment: 'Unexpected EOF while consuming a comment.',\n\tUnexpectedEOFInURL: 'Unexpected EOF while consuming a url token.',\n\tUnexpectedEOFInEscapedCodePoint: 'Unexpected EOF while consuming an escaped code point.',\n\tUnexpectedCharacterInURL: 'Unexpected character while consuming a url token.',\n\tInvalidEscapeSequenceInURL: 'Invalid escape sequence while consuming a url token.',\n\tInvalidEscapeSequenceAfterBackslash: 'Invalid escape sequence after \"\\\\\"',\n}\n"],
  "mappings": ";;;;AAMO,IAAM,aAAN,cAAyB,MAAM;AAAA,EANtC,OAMsC;AAAA;AAAA;AAAA,EAQrC,YAAY,SAAiB,aAAqB,WAAmB,aAA4B;AAChG,UAAM,OAAO;AACb,SAAK,OAAO;AAEZ,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,cAAc;AAAA,EACpB;AACD;AAEO,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAxBpD,OAwBoD;AAAA;AAAA;AAAA,EAInD,YAAY,SAAiB,aAAqB,WAAmB,aAA4B,OAAiB;AACjH,UAAM,SAAS,aAAa,WAAW,WAAW;AAElD,SAAK,QAAQ;AAAA,EACd;AACD;AAEO,IAAM,oBAAoB;AAAA,EAChC,2BAA2B;AAAA,EAC3B,uBAAuB;AAAA,EACvB,wBAAwB;AAAA,EACxB,oBAAoB;AAAA,EACpB,iCAAiC;AAAA,EACjC,0BAA0B;AAAA,EAC1B,4BAA4B;AAAA,EAC5B,qCAAqC;AACtC;",
  "names": []
}
