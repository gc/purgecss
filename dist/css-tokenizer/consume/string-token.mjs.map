{
  "version": 3,
  "sources": ["../../../src/css-tokenizer/code-points/code-points.ts", "../../../src/css-tokenizer/code-points/ranges.ts", "../../../src/css-tokenizer/interfaces/error.ts", "../../../src/css-tokenizer/consume/escaped-code-point.ts", "../../../src/css-tokenizer/consume/string-token.ts"],
  "sourcesContent": ["/** ' */\nexport const APOSTROPHE = 0x0027;\n/** * */\nexport const ASTERISK = 0x002a;\n/** \\b */\nexport const BACKSPACE = 0x008;\n/** \\r */\nexport const CARRIAGE_RETURN = 0x00d;\n/** \\t */\nexport const CHARACTER_TABULATION = 0x009;\n/** : */\nexport const COLON = 0x003a;\n/** , */\nexport const COMMA = 0x002c;\n/** @ */\nexport const COMMERCIAL_AT = 0x0040;\n/** \\x7F */\nexport const DELETE = 0x007f;\n/** ! */\nexport const EXCLAMATION_MARK = 0x0021;\n/** \\f */\nexport const FORM_FEED = 0x000c;\n/** . */\nexport const FULL_STOP = 0x002e;\n/** > */\nexport const GREATER_THAN_SIGN = 0x003e;\n/** - */\nexport const HYPHEN_MINUS = 0x002d;\n/** \\x1F */\nexport const INFORMATION_SEPARATOR_ONE = 0x001f;\n/** E */\nexport const LATIN_CAPITAL_LETTER_E = 0x0045;\n/** e */\nexport const LATIN_SMALL_LETTER_E = 0x0065;\n/** { */\nexport const LEFT_CURLY_BRACKET = 0x007b;\n/** ( */\nexport const LEFT_PARENTHESIS = 0x0028;\n/** [ */\nexport const LEFT_SQUARE_BRACKET = 0x005b;\n/** < */\nexport const LESS_THAN_SIGN = 0x003c;\n/** \\n */\nexport const LINE_FEED = 0x00a;\n/** \\v */\nexport const LINE_TABULATION = 0x00b;\n/** _ */\nexport const LOW_LINE = 0x005f;\n/** \\x10FFFF */\nexport const MAXIMUM_ALLOWED_CODEPOINT = 0x10FFFF;\n/** \\x00 */\nexport const NULL = 0x000;\n/** # */\nexport const NUMBER_SIGN = 0x0023;\n/** % */\nexport const PERCENTAGE_SIGN = 0x0025;\n/** + */\nexport const PLUS_SIGN = 0x002b;\n/** \" */\nexport const QUOTATION_MARK = 0x0022;\n/** \uFFFD */\nexport const REPLACEMENT_CHARACTER = 0xFFFD;\n/** \\ */\nexport const REVERSE_SOLIDUS = 0x005c;\n/** } */\nexport const RIGHT_CURLY_BRACKET = 0x007d;\n/** ) */\nexport const RIGHT_PARENTHESIS = 0x0029;\n/** ] */\nexport const RIGHT_SQUARE_BRACKET = 0x005d;\n/** ; */\nexport const SEMICOLON = 0x003b;\n/** \\u0E */\nexport const SHIFT_OUT = 0x00e;\n/** / */\nexport const SOLIDUS = 0x002f;\n/** \\u20 */\nexport const SPACE = 0x0020;\n/** u */\nexport const LATIN_SMALL_LETTER_U = 0x0075;\n/** U */\nexport const LATIN_CAPITAL_LETTER_U = 0x0055;\n/** r */\nexport const LATIN_SMALL_LETTER_R = 0x0072;\n/** R */\nexport const LATIN_CAPITAL_LETTER_R = 0x0052;\n/** l */\nexport const LATIN_SMALL_LETTER_L = 0x006c;\n/** L */\nexport const LATIN_CAPITAL_LETTER_L = 0x004c;\n/** ? */\nexport const QUESTION_MARK = 0x003f;\n/** 0 */\nexport const DIGIT_ZERO = 0x0030;\n/** F */\nexport const LATIN_CAPITAL_LETTER_F = 0x0046;\n", "import { BACKSPACE, DELETE, INFORMATION_SEPARATOR_ONE, LINE_TABULATION, LOW_LINE, HYPHEN_MINUS, NULL, SHIFT_OUT, LINE_FEED, CARRIAGE_RETURN, FORM_FEED, SPACE, CHARACTER_TABULATION } from './code-points';\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#tokenizer-definitions\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#digit\nexport function isDigitCodePoint(search: number): boolean {\n\treturn search >= 0x0030 && search <= 0x0039;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#uppercase-letter\nfunction isUppercaseLetterCodePoint(search: number): boolean {\n\treturn search >= 0x0041 && search <= 0x005a;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#lowercase-letter\nfunction isLowercaseLetterCodePoint(search: number): boolean {\n\treturn search >= 0x0061 && search <= 0x007a;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#hex-digit\nexport function isHexDigitCodePoint(search: number): boolean {\n\treturn (\n\t\t(search >= 0x0030 && search <= 0x0039) || // 0 .. 9\n\t\t(search >= 0x0061 && search <= 0x0066) || // a .. f\n\t\t(search >= 0x0041 && search <= 0x0046)    // A .. F\n\t);\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#letter\nfunction isLetterCodePoint(search: number): boolean {\n\treturn isLowercaseLetterCodePoint(search) || isUppercaseLetterCodePoint(search);\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#ident-start-code-point\nexport function isIdentStartCodePoint(search: number): boolean {\n\treturn isLetterCodePoint(search) || isNonASCII_IdentCodePoint(search) || search === LOW_LINE;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#ident-code-point\nexport function isIdentCodePoint(search: number): boolean {\n\treturn isIdentStartCodePoint(search) || isDigitCodePoint(search) || search === HYPHEN_MINUS;\n}\n\n// https://drafts.csswg.org/css-syntax/#non-ascii-ident-code-point\nfunction isNonASCII_IdentCodePoint(search: number): boolean {\n\tif (\n\t\tsearch === 0x00B7 ||\n\t\tsearch === 0x200C ||\n\t\tsearch === 0x200D ||\n\t\tsearch === 0x203F ||\n\t\tsearch === 0x2040 ||\n\t\tsearch === 0x200C\n\t) {\n\t\treturn true;\n\t}\n\n\tif (\n\t\t(0x00C0 <= search && search <= 0x00D6) ||\n\t\t(0x00D8 <= search && search <= 0x00F6) ||\n\t\t(0x00F8 <= search && search <= 0x037D) ||\n\t\t(0x037F <= search && search <= 0x1FFF) ||\n\t\t(0x2070 <= search && search <= 0x218F) ||\n\t\t(0x2C00 <= search && search <= 0x2FEF) ||\n\t\t(0x3001 <= search && search <= 0xD7FF) ||\n\t\t(0xF900 <= search && search <= 0xFDCF) ||\n\t\t(0xFDF0 <= search && search <= 0xFFFD)\n\t) {\n\t\treturn true;\n\t}\n\n\t// Input preprocessing\n\tif (search === 0x000) {\n\t\treturn true;\n\t} else if (isSurrogate(search)) {\n\t\treturn true;\n\t}\n\n\treturn search >= 0x10000;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#non-printable-code-point\nexport function isNonPrintableCodePoint(search: number): boolean {\n\treturn (\n\t\t(search === LINE_TABULATION) ||\n\t\t(search === DELETE) ||\n\t\t(NULL <= search && search <= BACKSPACE) ||\n\t\t(SHIFT_OUT <= search && search <= INFORMATION_SEPARATOR_ONE)\n\t);\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#whitespace\nexport function isNewLine(search: number): boolean {\n\treturn search === LINE_FEED || search === CARRIAGE_RETURN || search === FORM_FEED;\n}\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#whitespace\nexport function isWhitespace(search: number): boolean {\n\treturn search === SPACE || search === LINE_FEED || search === CHARACTER_TABULATION || search === CARRIAGE_RETURN || search === FORM_FEED;\n}\n\n// https://infra.spec.whatwg.org/#surrogate\nexport function isSurrogate(search: number): boolean {\n\treturn search >= 0xd800 && search <= 0xdfff;\n}\n", "import type { CSSToken } from \"./token\";\n\n/**\n * The CSS Tokenizer is forgiving and will never throw on invalid input.\n * Any errors are reported through the `onParseError` callback.\n */\nexport class ParseError extends Error {\n\t/** The index of the start character of the current token. */\n\tsourceStart: number;\n\t/** The index of the end character of the current token. */\n\tsourceEnd: number;\n\t/** The parser steps that preceded the error. */\n\tparserState: Array<string>;\n\n\tconstructor(message: string, sourceStart: number, sourceEnd: number, parserState: Array<string>) {\n\t\tsuper(message);\n\t\tthis.name = 'ParseError';\n\n\t\tthis.sourceStart = sourceStart;\n\t\tthis.sourceEnd = sourceEnd;\n\t\tthis.parserState = parserState;\n\t}\n}\n\nexport class ParseErrorWithToken extends ParseError {\n\t/** The associated token. */\n\ttoken: CSSToken;\n\n\tconstructor(message: string, sourceStart: number, sourceEnd: number, parserState: Array<string>, token: CSSToken) {\n\t\tsuper(message, sourceStart, sourceEnd, parserState);\n\n\t\tthis.token = token;\n\t}\n}\n\nexport const ParseErrorMessage = {\n\tUnexpectedNewLineInString: 'Unexpected newline while consuming a string token.',\n\tUnexpectedEOFInString: 'Unexpected EOF while consuming a string token.',\n\tUnexpectedEOFInComment: 'Unexpected EOF while consuming a comment.',\n\tUnexpectedEOFInURL: 'Unexpected EOF while consuming a url token.',\n\tUnexpectedEOFInEscapedCodePoint: 'Unexpected EOF while consuming an escaped code point.',\n\tUnexpectedCharacterInURL: 'Unexpected character while consuming a url token.',\n\tInvalidEscapeSequenceInURL: 'Invalid escape sequence while consuming a url token.',\n\tInvalidEscapeSequenceAfterBackslash: 'Invalid escape sequence after \"\\\\\"',\n}\n", "import { CARRIAGE_RETURN, LINE_FEED, MAXIMUM_ALLOWED_CODEPOINT, REPLACEMENT_CHARACTER } from '../code-points/code-points';\nimport { isHexDigitCodePoint, isSurrogate, isWhitespace } from '../code-points/ranges';\nimport type { CodePointReader } from '../interfaces/code-point-reader';\nimport type { Context } from '../interfaces/context';\nimport { ParseError, ParseErrorMessage } from '../interfaces/error';\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#consume-escaped-code-point\nexport function consumeEscapedCodePoint(ctx: Context, reader: CodePointReader): number {\n\tconst codePoint = reader.readCodePoint();\n\tif (typeof codePoint === \"undefined\") {\n\t\tctx.onParseError(new ParseError(\n\t\t\tParseErrorMessage.UnexpectedEOFInEscapedCodePoint,\n\t\t\treader.representationStart,\n\t\t\treader.representationEnd,\n\t\t\t[\n\t\t\t\t'4.3.7. Consume an escaped code point',\n\t\t\t\t'Unexpected EOF',\n\t\t\t],\n\t\t));\n\n\t\treturn REPLACEMENT_CHARACTER;\n\t}\n\n\tif (isHexDigitCodePoint(codePoint)) {\n\t\tconst hexSequence: Array<number> = [codePoint];\n\n\t\tlet nextCodePoint: number | undefined;\n\t\twhile ((typeof (nextCodePoint = reader.source.codePointAt(reader.cursor)) !== \"undefined\") && isHexDigitCodePoint(nextCodePoint) && hexSequence.length < 6) {\n\t\t\thexSequence.push(nextCodePoint);\n\t\t\treader.advanceCodePoint();\n\t\t}\n\n\t\tif (isWhitespace(reader.source.codePointAt(reader.cursor) ?? -1)) {\n\t\t\tif (\n\t\t\t\treader.source.codePointAt(reader.cursor) === CARRIAGE_RETURN &&\n\t\t\t\treader.source.codePointAt(reader.cursor + 1) === LINE_FEED\n\t\t\t) {\n\t\t\t\treader.advanceCodePoint();\n\t\t\t}\n\n\t\t\treader.advanceCodePoint();\n\t\t}\n\n\t\tconst codePointLiteral = parseInt(String.fromCodePoint(...hexSequence), 16);\n\t\tif (codePointLiteral === 0 || isSurrogate(codePointLiteral)) {\n\t\t\treturn REPLACEMENT_CHARACTER;\n\t\t}\n\t\tif (codePointLiteral > MAXIMUM_ALLOWED_CODEPOINT) {\n\t\t\treturn REPLACEMENT_CHARACTER;\n\t\t}\n\n\t\treturn codePointLiteral;\n\t}\n\n\tif (codePoint === 0 || isSurrogate(codePoint)) {\n\t\treturn REPLACEMENT_CHARACTER;\n\t}\n\n\treturn codePoint;\n}\n", "import { CARRIAGE_RETURN, LINE_FEED, NULL, REPLACEMENT_CHARACTER, REVERSE_SOLIDUS } from '../code-points/code-points';\nimport { isNewLine, isSurrogate } from '../code-points/ranges';\nimport type { CodePointReader } from '../interfaces/code-point-reader';\nimport type { Context } from '../interfaces/context';\nimport { ParseErrorWithToken, ParseErrorMessage } from '../interfaces/error';\nimport type { CSSToken, TokenBadString, TokenString} from '../interfaces/token';\nimport { TokenType } from '../interfaces/token';\nimport { consumeEscapedCodePoint } from './escaped-code-point';\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#consume-string-token\nexport function consumeStringToken(ctx: Context, reader: CodePointReader): TokenBadString|TokenString {\n\tlet result = '';\n\n\tconst first = reader.readCodePoint();\n\n\twhile (true) {\n\t\tconst next = reader.readCodePoint();\n\n\t\tif (typeof next === \"undefined\") {\n\t\t\tconst token: CSSToken = [TokenType.String, reader.source.slice(reader.representationStart, reader.representationEnd + 1), reader.representationStart, reader.representationEnd, { value: result }];\n\n\t\t\tctx.onParseError(new ParseErrorWithToken(\n\t\t\t\tParseErrorMessage.UnexpectedEOFInString,\n\t\t\t\treader.representationStart,\n\t\t\t\treader.representationEnd,\n\t\t\t\t[\n\t\t\t\t\t'4.3.5. Consume a string token',\n\t\t\t\t\t'Unexpected EOF',\n\t\t\t\t],\n\t\t\t\ttoken\n\t\t\t));\n\n\t\t\treturn token;\n\t\t}\n\n\t\tif (isNewLine(next)) {\n\t\t\treader.unreadCodePoint();\n\n\t\t\tconst token: CSSToken = [TokenType.BadString, reader.source.slice(reader.representationStart, reader.representationEnd + 1), reader.representationStart, reader.representationEnd, undefined];\n\n\t\t\tctx.onParseError(new ParseErrorWithToken(\n\t\t\t\tParseErrorMessage.UnexpectedNewLineInString,\n\t\t\t\treader.representationStart,\n\t\t\t\t(\n\t\t\t\t\t(\n\t\t\t\t\t\treader.source.codePointAt(reader.cursor) === CARRIAGE_RETURN &&\n\t\t\t\t\t\treader.source.codePointAt(reader.cursor + 1) === LINE_FEED\n\t\t\t\t\t) ?\n\t\t\t\t\t\t// CR LF\n\t\t\t\t\t\treader.representationEnd + 2 :\n\t\t\t\t\t\t// LF\n\t\t\t\t\t\treader.representationEnd + 1\n\t\t\t\t),\n\t\t\t\t[\n\t\t\t\t\t'4.3.5. Consume a string token',\n\t\t\t\t\t'Unexpected newline',\n\t\t\t\t],\n\t\t\t\ttoken\n\t\t\t));\n\n\t\t\treturn token;\n\t\t}\n\n\t\tif (next === first) {\n\t\t\treturn [TokenType.String, reader.source.slice(reader.representationStart, reader.representationEnd + 1), reader.representationStart, reader.representationEnd, { value: result }];\n\t\t}\n\n\t\tif (next === REVERSE_SOLIDUS) {\n\t\t\tif (typeof reader.source.codePointAt(reader.cursor) === \"undefined\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isNewLine(reader.source.codePointAt(reader.cursor) ?? -1)) {\n\t\t\t\tif (\n\t\t\t\t\treader.source.codePointAt(reader.cursor) === CARRIAGE_RETURN &&\n\t\t\t\t\treader.source.codePointAt(reader.cursor + 1) === LINE_FEED\n\t\t\t\t) {\n\t\t\t\t\treader.advanceCodePoint();\n\t\t\t\t}\n\n\t\t\t\treader.advanceCodePoint();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresult = result + String.fromCodePoint(consumeEscapedCodePoint(ctx, reader));\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (next === NULL || isSurrogate(next)) {\n\t\t\tresult = result + String.fromCodePoint(REPLACEMENT_CHARACTER);\n\t\t\tcontinue;\n\t\t}\n\n\t\tresult = result + String.fromCodePoint(next);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
