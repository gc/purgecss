{
  "version": 3,
  "sources": ["../../../src/css-tokenizer/code-points/code-points.ts", "../../../src/css-tokenizer/interfaces/error.ts", "../../../src/css-tokenizer/consume/comment.ts"],
  "sourcesContent": ["/** ' */\nexport const APOSTROPHE = 0x0027;\n/** * */\nexport const ASTERISK = 0x002a;\n/** \\b */\nexport const BACKSPACE = 0x008;\n/** \\r */\nexport const CARRIAGE_RETURN = 0x00d;\n/** \\t */\nexport const CHARACTER_TABULATION = 0x009;\n/** : */\nexport const COLON = 0x003a;\n/** , */\nexport const COMMA = 0x002c;\n/** @ */\nexport const COMMERCIAL_AT = 0x0040;\n/** \\x7F */\nexport const DELETE = 0x007f;\n/** ! */\nexport const EXCLAMATION_MARK = 0x0021;\n/** \\f */\nexport const FORM_FEED = 0x000c;\n/** . */\nexport const FULL_STOP = 0x002e;\n/** > */\nexport const GREATER_THAN_SIGN = 0x003e;\n/** - */\nexport const HYPHEN_MINUS = 0x002d;\n/** \\x1F */\nexport const INFORMATION_SEPARATOR_ONE = 0x001f;\n/** E */\nexport const LATIN_CAPITAL_LETTER_E = 0x0045;\n/** e */\nexport const LATIN_SMALL_LETTER_E = 0x0065;\n/** { */\nexport const LEFT_CURLY_BRACKET = 0x007b;\n/** ( */\nexport const LEFT_PARENTHESIS = 0x0028;\n/** [ */\nexport const LEFT_SQUARE_BRACKET = 0x005b;\n/** < */\nexport const LESS_THAN_SIGN = 0x003c;\n/** \\n */\nexport const LINE_FEED = 0x00a;\n/** \\v */\nexport const LINE_TABULATION = 0x00b;\n/** _ */\nexport const LOW_LINE = 0x005f;\n/** \\x10FFFF */\nexport const MAXIMUM_ALLOWED_CODEPOINT = 0x10FFFF;\n/** \\x00 */\nexport const NULL = 0x000;\n/** # */\nexport const NUMBER_SIGN = 0x0023;\n/** % */\nexport const PERCENTAGE_SIGN = 0x0025;\n/** + */\nexport const PLUS_SIGN = 0x002b;\n/** \" */\nexport const QUOTATION_MARK = 0x0022;\n/** \uFFFD */\nexport const REPLACEMENT_CHARACTER = 0xFFFD;\n/** \\ */\nexport const REVERSE_SOLIDUS = 0x005c;\n/** } */\nexport const RIGHT_CURLY_BRACKET = 0x007d;\n/** ) */\nexport const RIGHT_PARENTHESIS = 0x0029;\n/** ] */\nexport const RIGHT_SQUARE_BRACKET = 0x005d;\n/** ; */\nexport const SEMICOLON = 0x003b;\n/** \\u0E */\nexport const SHIFT_OUT = 0x00e;\n/** / */\nexport const SOLIDUS = 0x002f;\n/** \\u20 */\nexport const SPACE = 0x0020;\n/** u */\nexport const LATIN_SMALL_LETTER_U = 0x0075;\n/** U */\nexport const LATIN_CAPITAL_LETTER_U = 0x0055;\n/** r */\nexport const LATIN_SMALL_LETTER_R = 0x0072;\n/** R */\nexport const LATIN_CAPITAL_LETTER_R = 0x0052;\n/** l */\nexport const LATIN_SMALL_LETTER_L = 0x006c;\n/** L */\nexport const LATIN_CAPITAL_LETTER_L = 0x004c;\n/** ? */\nexport const QUESTION_MARK = 0x003f;\n/** 0 */\nexport const DIGIT_ZERO = 0x0030;\n/** F */\nexport const LATIN_CAPITAL_LETTER_F = 0x0046;\n", "import type { CSSToken } from \"./token\";\n\n/**\n * The CSS Tokenizer is forgiving and will never throw on invalid input.\n * Any errors are reported through the `onParseError` callback.\n */\nexport class ParseError extends Error {\n\t/** The index of the start character of the current token. */\n\tsourceStart: number;\n\t/** The index of the end character of the current token. */\n\tsourceEnd: number;\n\t/** The parser steps that preceded the error. */\n\tparserState: Array<string>;\n\n\tconstructor(message: string, sourceStart: number, sourceEnd: number, parserState: Array<string>) {\n\t\tsuper(message);\n\t\tthis.name = 'ParseError';\n\n\t\tthis.sourceStart = sourceStart;\n\t\tthis.sourceEnd = sourceEnd;\n\t\tthis.parserState = parserState;\n\t}\n}\n\nexport class ParseErrorWithToken extends ParseError {\n\t/** The associated token. */\n\ttoken: CSSToken;\n\n\tconstructor(message: string, sourceStart: number, sourceEnd: number, parserState: Array<string>, token: CSSToken) {\n\t\tsuper(message, sourceStart, sourceEnd, parserState);\n\n\t\tthis.token = token;\n\t}\n}\n\nexport const ParseErrorMessage = {\n\tUnexpectedNewLineInString: 'Unexpected newline while consuming a string token.',\n\tUnexpectedEOFInString: 'Unexpected EOF while consuming a string token.',\n\tUnexpectedEOFInComment: 'Unexpected EOF while consuming a comment.',\n\tUnexpectedEOFInURL: 'Unexpected EOF while consuming a url token.',\n\tUnexpectedEOFInEscapedCodePoint: 'Unexpected EOF while consuming an escaped code point.',\n\tUnexpectedCharacterInURL: 'Unexpected character while consuming a url token.',\n\tInvalidEscapeSequenceInURL: 'Invalid escape sequence while consuming a url token.',\n\tInvalidEscapeSequenceAfterBackslash: 'Invalid escape sequence after \"\\\\\"',\n}\n", "import { ASTERISK, SOLIDUS } from '../code-points/code-points';\nimport type { CodePointReader } from '../interfaces/code-point-reader';\nimport type { Context } from '../interfaces/context';\nimport { ParseErrorMessage, ParseErrorWithToken } from '../interfaces/error';\nimport type { CSSToken, TokenComment} from '../interfaces/token';\nimport { TokenType } from '../interfaces/token';\n\n// https://www.w3.org/TR/2021/CRD-css-syntax-3-20211224/#consume-comment\nexport function consumeComment(ctx: Context, reader: CodePointReader): TokenComment {\n\treader.advanceCodePoint(2);\n\n\twhile (true) {\n\t\tconst codePoint = reader.readCodePoint();\n\t\tif (typeof codePoint === \"undefined\") {\n\t\t\tconst token: CSSToken = [\n\t\t\t\tTokenType.Comment,\n\t\t\t\treader.source.slice(reader.representationStart, reader.representationEnd + 1),\n\t\t\t\treader.representationStart,\n\t\t\t\treader.representationEnd,\n\t\t\t\tundefined,\n\t\t\t];\n\n\t\t\tctx.onParseError(new ParseErrorWithToken(\n\t\t\t\tParseErrorMessage.UnexpectedEOFInComment,\n\t\t\t\treader.representationStart,\n\t\t\t\treader.representationEnd,\n\t\t\t\t[\n\t\t\t\t\t'4.3.2. Consume comments',\n\t\t\t\t\t'Unexpected EOF',\n\t\t\t\t],\n\t\t\t\ttoken\n\t\t\t));\n\n\t\t\treturn token;\n\t\t}\n\n\t\tif (codePoint !== ASTERISK) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof reader.source.codePointAt(reader.cursor) === \"undefined\") {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (reader.source.codePointAt(reader.cursor) === SOLIDUS) {\n\t\t\treader.advanceCodePoint();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn [\n\t\tTokenType.Comment,\n\t\treader.source.slice(reader.representationStart, reader.representationEnd + 1),\n\t\treader.representationStart,\n\t\treader.representationEnd,\n\t\tundefined,\n\t];\n}\n"],
  "mappings": ";;;;AAGO,IAAM,WAAW;AAwEjB,IAAM,UAAU;;;ACrEhB,IAAM,aAAN,cAAyB,MAAM;AAAA,EANtC,OAMsC;AAAA;AAAA;AAAA,EAQrC,YAAY,SAAiB,aAAqB,WAAmB,aAA4B;AAChG,UAAM,OAAO;AACb,SAAK,OAAO;AAEZ,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,cAAc;AAAA,EACpB;AACD;AAEO,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAxBpD,OAwBoD;AAAA;AAAA;AAAA,EAInD,YAAY,SAAiB,aAAqB,WAAmB,aAA4B,OAAiB;AACjH,UAAM,SAAS,aAAa,WAAW,WAAW;AAElD,SAAK,QAAQ;AAAA,EACd;AACD;AAEO,IAAM,oBAAoB;AAAA,EAChC,2BAA2B;AAAA,EAC3B,uBAAuB;AAAA,EACvB,wBAAwB;AAAA,EACxB,oBAAoB;AAAA,EACpB,iCAAiC;AAAA,EACjC,0BAA0B;AAAA,EAC1B,4BAA4B;AAAA,EAC5B,qCAAqC;AACtC;;;ACpCO,SAAS,eAAe,KAAc,QAAuC;AACnF,SAAO,iBAAiB,CAAC;AAEzB,SAAO,MAAM;AACZ,UAAM,YAAY,OAAO,cAAc;AACvC,QAAI,OAAO,cAAc,aAAa;AACrC,YAAM,QAAkB;AAAA;AAAA,QAEvB,OAAO,OAAO,MAAM,OAAO,qBAAqB,OAAO,oBAAoB,CAAC;AAAA,QAC5E,OAAO;AAAA,QACP,OAAO;AAAA,QACP;AAAA,MACD;AAEA,UAAI,aAAa,IAAI;AAAA,QACpB,kBAAkB;AAAA,QAClB,OAAO;AAAA,QACP,OAAO;AAAA,QACP;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,MACD,CAAC;AAED,aAAO;AAAA,IACR;AAEA,QAAI,cAAc,UAAU;AAC3B;AAAA,IACD;AAEA,QAAI,OAAO,OAAO,OAAO,YAAY,OAAO,MAAM,MAAM,aAAa;AACpE;AAAA,IACD;AAEA,QAAI,OAAO,OAAO,YAAY,OAAO,MAAM,MAAM,SAAS;AACzD,aAAO,iBAAiB;AACxB;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AAAA;AAAA,IAEN,OAAO,OAAO,MAAM,OAAO,qBAAqB,OAAO,oBAAoB,CAAC;AAAA,IAC5E,OAAO;AAAA,IACP,OAAO;AAAA,IACP;AAAA,EACD;AACD;AAjDgB;",
  "names": []
}
