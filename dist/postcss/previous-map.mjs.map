{
  "version": 3,
  "sources": ["../../src/postcss/previous-map.js"],
  "sourcesContent": ["function fromBase64(str) {\r\n    if (Buffer) {\r\n        return Buffer.from(str, 'base64').toString();\r\n    }\r\n    else {\r\n        /* c8 ignore next 2 */\r\n        return window.atob(str);\r\n    }\r\n}\r\nexport class PreviousMap {\r\n    constructor(css, opts) {\r\n        if (opts.map === false)\r\n            return;\r\n        this.loadAnnotation(css);\r\n        this.inline = this.startWith(this.annotation, 'data:');\r\n        const prev = opts.map ? opts.map.prev : undefined;\r\n        const text = this.loadMap(opts.from, prev);\r\n        if (!this.mapFile && opts.from) {\r\n            this.mapFile = opts.from;\r\n        }\r\n        if (text)\r\n            this.text = text;\r\n    }\r\n    consumer() {\r\n        if (!this.consumerCache) {\r\n            this.consumerCache = new SourceMapConsumer(this.text);\r\n        }\r\n        return this.consumerCache;\r\n    }\r\n    decodeInline(text) {\r\n        const baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\r\n        const baseUri = /^data:application\\/json;base64,/;\r\n        const charsetUri = /^data:application\\/json;charset=utf-?8,/;\r\n        const uri = /^data:application\\/json,/;\r\n        const uriMatch = text.match(charsetUri) || text.match(uri);\r\n        if (uriMatch) {\r\n            return decodeURIComponent(text.substr(uriMatch[0].length));\r\n        }\r\n        const baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri);\r\n        if (baseUriMatch) {\r\n            return fromBase64(text.substr(baseUriMatch[0].length));\r\n        }\r\n        const encoding = text.match(/data:application\\/json;([^,]+),/)[1];\r\n        throw new Error('Unsupported source map encoding ' + encoding);\r\n    }\r\n    getAnnotationURL(sourceMapString) {\r\n        return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim();\r\n    }\r\n    isMap(map) {\r\n        if (typeof map !== 'object')\r\n            return false;\r\n        return (typeof map.mappings === 'string' ||\r\n            typeof map._mappings === 'string' ||\r\n            Array.isArray(map.sections));\r\n    }\r\n    loadAnnotation(css) {\r\n        const comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g);\r\n        if (!comments)\r\n            return;\r\n        // sourceMappingURLs from comments, strings, etc.\r\n        const start = css.lastIndexOf(comments.pop());\r\n        const end = css.indexOf('*/', start);\r\n        if (start > -1 && end > -1) {\r\n            // Locate the last sourceMappingURL to avoid pickin\r\n            this.annotation = this.getAnnotationURL(css.substring(start, end));\r\n        }\r\n    }\r\n    loadFile(path) {\r\n        throw new Error(\"Shouldnt be used\");\r\n    }\r\n    loadMap(file, prev) {\r\n        if (prev === false)\r\n            return false;\r\n        if (prev) {\r\n            if (typeof prev === 'string') {\r\n                return prev;\r\n            }\r\n            else if (typeof prev === 'function') {\r\n                const prevPath = prev(file);\r\n                if (prevPath) {\r\n                    const map = this.loadFile(prevPath);\r\n                    if (!map) {\r\n                        throw new Error('Unable to load previous source map: ' + prevPath.toString());\r\n                    }\r\n                    return map;\r\n                }\r\n            }\r\n            else if (this.isMap(prev)) {\r\n                return JSON.stringify(prev);\r\n            }\r\n            else {\r\n                throw new Error('Unsupported previous source map format: ' + prev.toString());\r\n            }\r\n        }\r\n        else if (this.inline) {\r\n            return this.decodeInline(this.annotation);\r\n        }\r\n        else if (this.annotation) {\r\n            const map = this.annotation;\r\n            return this.loadFile(map);\r\n        }\r\n    }\r\n    startWith(string, start) {\r\n        if (!string)\r\n            return false;\r\n        return string.substr(0, start.length) === start;\r\n    }\r\n    withContent() {\r\n        return !!(this.consumer().sourcesContent &&\r\n            this.consumer().sourcesContent.length > 0);\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
