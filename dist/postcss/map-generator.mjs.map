{
  "version": 3,
  "sources": ["../../src/postcss/css-syntax-error.js", "../../src/postcss/input.js", "../../src/postcss/map-generator.js"],
  "sourcesContent": ["\nexport class CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode() {\n      return '';\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n", "\n\nimport { CssSyntaxError } from \"./css-syntax-error\";\n\nconst fromOffsetCache = Symbol('fromOffsetCache')\n\nexport class Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, result\n\n    if (line && typeof line === 'object') {\n      const start = line\n      const end = column\n      if (typeof start.offset === 'number') {\n        const pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        const pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      const pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    const origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      const lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    const consumer = this.map.consumer()\n\n    const from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n\n    const result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    const source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    const json = {}\n    for (const name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n}\n", "import { Input } from './input';\n\nexport class MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.originalCSS = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n   \n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.startsWith('# sourceMappingURL=')) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      const prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      })\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    })\n\n    let line = 1\n    let column = 1\n\n    const noSource = '<no source>'\n    const mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let last, lines\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        const p = node.parent || { raws: {} }\n        const childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    const annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n   return file;\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            const map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        const input = new Input(this.originalCSS, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    throw new Error(`setSourcesContent isnt implemented`);\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    const cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n  }\n\n  toUrl(path) {\n    const cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    path = path.replace(/\\\\/g, '/')\n\n    const url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
