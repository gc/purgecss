{
  "version": 3,
  "sources": ["../../src/postcss/css-syntax-error.js", "../../src/postcss/input.js", "../../src/postcss/map-generator.js"],
  "sourcesContent": ["export class CssSyntaxError extends Error {\r\n    constructor(message, line, column, source, file, plugin) {\r\n        super(message);\r\n        this.name = 'CssSyntaxError';\r\n        this.reason = message;\r\n        if (file) {\r\n            this.file = file;\r\n        }\r\n        if (source) {\r\n            this.source = source;\r\n        }\r\n        if (plugin) {\r\n            this.plugin = plugin;\r\n        }\r\n        if (typeof line !== 'undefined' && typeof column !== 'undefined') {\r\n            if (typeof line === 'number') {\r\n                this.line = line;\r\n                this.column = column;\r\n            }\r\n            else {\r\n                this.line = line.line;\r\n                this.column = line.column;\r\n                this.endLine = column.line;\r\n                this.endColumn = column.column;\r\n            }\r\n        }\r\n        this.setMessage();\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, CssSyntaxError);\r\n        }\r\n    }\r\n    setMessage() {\r\n        this.message = this.plugin ? this.plugin + ': ' : '';\r\n        this.message += this.file ? this.file : '<css input>';\r\n        if (typeof this.line !== 'undefined') {\r\n            this.message += ':' + this.line + ':' + this.column;\r\n        }\r\n        this.message += ': ' + this.reason;\r\n    }\r\n    showSourceCode() {\r\n        return '';\r\n    }\r\n    toString() {\r\n        let code = this.showSourceCode();\r\n        if (code) {\r\n            code = '\\n\\n' + code + '\\n';\r\n        }\r\n        return this.name + ': ' + this.message + code;\r\n    }\r\n}\r\n", "import { CssSyntaxError } from \"./css-syntax-error\";\r\nconst fromOffsetCache = Symbol('fromOffsetCache');\r\nexport class Input {\r\n    constructor(css, opts = {}) {\r\n        if (css === null ||\r\n            typeof css === 'undefined' ||\r\n            (typeof css === 'object' && !css.toString)) {\r\n            throw new Error(`PostCSS received ${css} instead of CSS string`);\r\n        }\r\n        this.css = css.toString();\r\n        if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\r\n            this.hasBOM = true;\r\n            this.css = this.css.slice(1);\r\n        }\r\n        else {\r\n            this.hasBOM = false;\r\n        }\r\n        if (this.map)\r\n            this.map.file = this.from;\r\n    }\r\n    error(message, line, column, opts = {}) {\r\n        let endColumn, endLine, result;\r\n        if (line && typeof line === 'object') {\r\n            const start = line;\r\n            const end = column;\r\n            if (typeof start.offset === 'number') {\r\n                const pos = this.fromOffset(start.offset);\r\n                line = pos.line;\r\n                column = pos.col;\r\n            }\r\n            else {\r\n                line = start.line;\r\n                column = start.column;\r\n            }\r\n            if (typeof end.offset === 'number') {\r\n                const pos = this.fromOffset(end.offset);\r\n                endLine = pos.line;\r\n                endColumn = pos.col;\r\n            }\r\n            else {\r\n                endLine = end.line;\r\n                endColumn = end.column;\r\n            }\r\n        }\r\n        else if (!column) {\r\n            const pos = this.fromOffset(line);\r\n            line = pos.line;\r\n            column = pos.col;\r\n        }\r\n        const origin = this.origin(line, column, endLine, endColumn);\r\n        if (origin) {\r\n            result = new CssSyntaxError(message, origin.endLine === undefined\r\n                ? origin.line\r\n                : { column: origin.column, line: origin.line }, origin.endLine === undefined\r\n                ? origin.column\r\n                : { column: origin.endColumn, line: origin.endLine }, origin.source, origin.file, opts.plugin);\r\n        }\r\n        else {\r\n            result = new CssSyntaxError(message, endLine === undefined ? line : { column, line }, endLine === undefined ? column : { column: endColumn, line: endLine }, this.css, this.file, opts.plugin);\r\n        }\r\n        result.input = { column, endColumn, endLine, line, source: this.css };\r\n        if (this.file) {\r\n            result.input.file = this.file;\r\n        }\r\n        return result;\r\n    }\r\n    fromOffset(offset) {\r\n        let lastLine, lineToIndex;\r\n        if (!this[fromOffsetCache]) {\r\n            const lines = this.css.split('\\n');\r\n            lineToIndex = new Array(lines.length);\r\n            let prevIndex = 0;\r\n            for (let i = 0, l = lines.length; i < l; i++) {\r\n                lineToIndex[i] = prevIndex;\r\n                prevIndex += lines[i].length + 1;\r\n            }\r\n            this[fromOffsetCache] = lineToIndex;\r\n        }\r\n        else {\r\n            lineToIndex = this[fromOffsetCache];\r\n        }\r\n        lastLine = lineToIndex[lineToIndex.length - 1];\r\n        let min = 0;\r\n        if (offset >= lastLine) {\r\n            min = lineToIndex.length - 1;\r\n        }\r\n        else {\r\n            let max = lineToIndex.length - 2;\r\n            let mid;\r\n            while (min < max) {\r\n                mid = min + ((max - min) >> 1);\r\n                if (offset < lineToIndex[mid]) {\r\n                    max = mid - 1;\r\n                }\r\n                else if (offset >= lineToIndex[mid + 1]) {\r\n                    min = mid + 1;\r\n                }\r\n                else {\r\n                    min = mid;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            col: offset - lineToIndex[min] + 1,\r\n            line: min + 1\r\n        };\r\n    }\r\n    origin(line, column, endLine, endColumn) {\r\n        if (!this.map)\r\n            return false;\r\n        const consumer = this.map.consumer();\r\n        const from = consumer.originalPositionFor({ column, line });\r\n        if (!from.source)\r\n            return false;\r\n        let to;\r\n        if (typeof endLine === 'number') {\r\n            to = consumer.originalPositionFor({ column: endColumn, line: endLine });\r\n        }\r\n        let fromUrl;\r\n        fromUrl = new URL(from.source, this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile));\r\n        const result = {\r\n            column: from.column,\r\n            endColumn: to && to.column,\r\n            endLine: to && to.line,\r\n            line: from.line,\r\n            url: fromUrl.toString()\r\n        };\r\n        const source = consumer.sourceContentFor(from.source);\r\n        if (source)\r\n            result.source = source;\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const json = {};\r\n        for (const name of ['hasBOM', 'css', 'file', 'id']) {\r\n            if (this[name] != null) {\r\n                json[name] = this[name];\r\n            }\r\n        }\r\n        if (this.map) {\r\n            json.map = { ...this.map };\r\n            if (json.map.consumerCache) {\r\n                json.map.consumerCache = undefined;\r\n            }\r\n        }\r\n        return json;\r\n    }\r\n    get from() {\r\n        return this.file || this.id;\r\n    }\r\n}\r\n", "import { Input } from './input';\r\nexport class MapGenerator {\r\n    constructor(stringify, root, opts, cssString) {\r\n        this.stringify = stringify;\r\n        this.mapOpts = opts.map || {};\r\n        this.root = root;\r\n        this.opts = opts;\r\n        this.css = cssString;\r\n        this.originalCSS = cssString;\r\n        this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\r\n        this.memoizedFileURLs = new Map();\r\n        this.memoizedPaths = new Map();\r\n        this.memoizedURLs = new Map();\r\n    }\r\n    addAnnotation() {\r\n        let content;\r\n        if (this.isInline()) {\r\n            content =\r\n                'data:application/json;base64,' + this.toBase64(this.map.toString());\r\n        }\r\n        else if (typeof this.mapOpts.annotation === 'string') {\r\n            content = this.mapOpts.annotation;\r\n        }\r\n        else if (typeof this.mapOpts.annotation === 'function') {\r\n            content = this.mapOpts.annotation(this.opts.to, this.root);\r\n        }\r\n        else {\r\n            content = this.outputFile() + '.map';\r\n        }\r\n        let eol = '\\n';\r\n        if (this.css.includes('\\r\\n'))\r\n            eol = '\\r\\n';\r\n        this.css += eol + '/*# sourceMappingURL=' + content + ' */';\r\n    }\r\n    applyPrevMaps() {\r\n    }\r\n    clearAnnotation() {\r\n        if (this.mapOpts.annotation === false)\r\n            return;\r\n        if (this.root) {\r\n            let node;\r\n            for (let i = this.root.nodes.length - 1; i >= 0; i--) {\r\n                node = this.root.nodes[i];\r\n                if (node.type !== 'comment')\r\n                    continue;\r\n                if (node.text.startsWith('# sourceMappingURL=')) {\r\n                    this.root.removeChild(i);\r\n                }\r\n            }\r\n        }\r\n        else if (this.css) {\r\n            this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\r\n        }\r\n    }\r\n    generate() {\r\n        this.clearAnnotation();\r\n        let result = '';\r\n        this.stringify(this.root, i => {\r\n            result += i;\r\n        });\r\n        return [result];\r\n    }\r\n    generateMap() {\r\n        if (this.root) {\r\n            this.generateString();\r\n        }\r\n        else if (this.previous().length === 1) {\r\n            const prev = this.previous()[0].consumer();\r\n            prev.file = this.outputFile();\r\n            this.map = SourceMapGenerator.fromSourceMap(prev, {\r\n                ignoreInvalidMapping: true\r\n            });\r\n        }\r\n        else {\r\n            this.map = new SourceMapGenerator({\r\n                file: this.outputFile(),\r\n                ignoreInvalidMapping: true\r\n            });\r\n            this.map.addMapping({\r\n                generated: { column: 0, line: 1 },\r\n                original: { column: 0, line: 1 },\r\n                source: this.opts.from\r\n                    ? this.toUrl(this.path(this.opts.from))\r\n                    : '<no source>'\r\n            });\r\n        }\r\n        if (this.isSourcesContent())\r\n            this.setSourcesContent();\r\n        if (this.root && this.previous().length > 0)\r\n            this.applyPrevMaps();\r\n        if (this.isAnnotation())\r\n            this.addAnnotation();\r\n        if (this.isInline()) {\r\n            return [this.css];\r\n        }\r\n        else {\r\n            return [this.css, this.map];\r\n        }\r\n    }\r\n    generateString() {\r\n        this.css = '';\r\n        this.map = new SourceMapGenerator({\r\n            file: this.outputFile(),\r\n            ignoreInvalidMapping: true\r\n        });\r\n        let line = 1;\r\n        let column = 1;\r\n        const noSource = '<no source>';\r\n        const mapping = {\r\n            generated: { column: 0, line: 0 },\r\n            original: { column: 0, line: 0 },\r\n            source: ''\r\n        };\r\n        let last, lines;\r\n        this.stringify(this.root, (str, node, type) => {\r\n            this.css += str;\r\n            if (node && type !== 'end') {\r\n                mapping.generated.line = line;\r\n                mapping.generated.column = column - 1;\r\n                if (node.source && node.source.start) {\r\n                    mapping.source = this.sourcePath(node);\r\n                    mapping.original.line = node.source.start.line;\r\n                    mapping.original.column = node.source.start.column - 1;\r\n                    this.map.addMapping(mapping);\r\n                }\r\n                else {\r\n                    mapping.source = noSource;\r\n                    mapping.original.line = 1;\r\n                    mapping.original.column = 0;\r\n                    this.map.addMapping(mapping);\r\n                }\r\n            }\r\n            lines = str.match(/\\n/g);\r\n            if (lines) {\r\n                line += lines.length;\r\n                last = str.lastIndexOf('\\n');\r\n                column = str.length - last;\r\n            }\r\n            else {\r\n                column += str.length;\r\n            }\r\n            if (node && type !== 'start') {\r\n                const p = node.parent || { raws: {} };\r\n                const childless = node.type === 'decl' || (node.type === 'atrule' && !node.nodes);\r\n                if (!childless || node !== p.last || p.raws.semicolon) {\r\n                    if (node.source && node.source.end) {\r\n                        mapping.source = this.sourcePath(node);\r\n                        mapping.original.line = node.source.end.line;\r\n                        mapping.original.column = node.source.end.column - 1;\r\n                        mapping.generated.line = line;\r\n                        mapping.generated.column = column - 2;\r\n                        this.map.addMapping(mapping);\r\n                    }\r\n                    else {\r\n                        mapping.source = noSource;\r\n                        mapping.original.line = 1;\r\n                        mapping.original.column = 0;\r\n                        mapping.generated.line = line;\r\n                        mapping.generated.column = column - 1;\r\n                        this.map.addMapping(mapping);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    isAnnotation() {\r\n        if (this.isInline()) {\r\n            return true;\r\n        }\r\n        if (typeof this.mapOpts.annotation !== 'undefined') {\r\n            return this.mapOpts.annotation;\r\n        }\r\n        if (this.previous().length) {\r\n            return this.previous().some(i => i.annotation);\r\n        }\r\n        return true;\r\n    }\r\n    isInline() {\r\n        if (typeof this.mapOpts.inline !== 'undefined') {\r\n            return this.mapOpts.inline;\r\n        }\r\n        const annotation = this.mapOpts.annotation;\r\n        if (typeof annotation !== 'undefined' && annotation !== true) {\r\n            return false;\r\n        }\r\n        if (this.previous().length) {\r\n            return this.previous().some(i => i.inline);\r\n        }\r\n        return true;\r\n    }\r\n    isMap() {\r\n        if (typeof this.opts.map !== 'undefined') {\r\n            return !!this.opts.map;\r\n        }\r\n        return this.previous().length > 0;\r\n    }\r\n    isSourcesContent() {\r\n        if (typeof this.mapOpts.sourcesContent !== 'undefined') {\r\n            return this.mapOpts.sourcesContent;\r\n        }\r\n        if (this.previous().length) {\r\n            return this.previous().some(i => i.withContent());\r\n        }\r\n        return true;\r\n    }\r\n    outputFile() {\r\n        if (this.opts.to) {\r\n            return this.path(this.opts.to);\r\n        }\r\n        else if (this.opts.from) {\r\n            return this.path(this.opts.from);\r\n        }\r\n        else {\r\n            return 'to.css';\r\n        }\r\n    }\r\n    path(file) {\r\n        return file;\r\n    }\r\n    previous() {\r\n        if (!this.previousMaps) {\r\n            this.previousMaps = [];\r\n            if (this.root) {\r\n                this.root.walk(node => {\r\n                    if (node.source && node.source.input.map) {\r\n                        const map = node.source.input.map;\r\n                        if (!this.previousMaps.includes(map)) {\r\n                            this.previousMaps.push(map);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                const input = new Input(this.originalCSS, this.opts);\r\n                if (input.map)\r\n                    this.previousMaps.push(input.map);\r\n            }\r\n        }\r\n        return this.previousMaps;\r\n    }\r\n    setSourcesContent() {\r\n        throw new Error(`setSourcesContent isnt implemented`);\r\n    }\r\n    sourcePath(node) {\r\n        if (this.mapOpts.from) {\r\n            return this.toUrl(this.mapOpts.from);\r\n        }\r\n        else if (this.usesFileUrls) {\r\n            return this.toFileUrl(node.source.input.from);\r\n        }\r\n        else {\r\n            return this.toUrl(this.path(node.source.input.from));\r\n        }\r\n    }\r\n    toBase64(str) {\r\n        if (Buffer) {\r\n            return Buffer.from(str).toString('base64');\r\n        }\r\n        else {\r\n            return window.btoa(unescape(encodeURIComponent(str)));\r\n        }\r\n    }\r\n    toFileUrl(path) {\r\n        const cached = this.memoizedFileURLs.get(path);\r\n        if (cached)\r\n            return cached;\r\n        throw new Error('`map.absolute` option is not available in this PostCSS build');\r\n    }\r\n    toUrl(path) {\r\n        const cached = this.memoizedURLs.get(path);\r\n        if (cached)\r\n            return cached;\r\n        path = path.replace(/\\\\/g, '/');\r\n        const url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\r\n        this.memoizedURLs.set(path, url);\r\n        return url;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
