{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/picocolors@1.1.1/node_modules/picocolors/picocolors.js", "../../src/postcss/tokenize.js", "../../src/postcss/terminal-highlight.js", "../../src/postcss/css-syntax-error.js"],
  "sourcesContent": ["let p = process || {}, argv = p.argv || [], env = p.env || {}\nlet isColorSupported =\n\t!(!!env.NO_COLOR || argv.includes(\"--no-color\")) &&\n\t(!!env.FORCE_COLOR || argv.includes(\"--color\") || p.platform === \"win32\" || ((p.stdout || {}).isTTY && env.TERM !== \"dumb\") || !!env.CI)\n\nlet formatter = (open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input, index = string.indexOf(close, open.length)\n\t\treturn ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet result = \"\", cursor = 0\n\tdo {\n\t\tresult += string.substring(cursor, index) + replace\n\t\tcursor = index + close.length\n\t\tindex = string.indexOf(close, cursor)\n\t} while (~index)\n\treturn result + string.substring(cursor)\n}\n\nlet createColors = (enabled = isColorSupported) => {\n\tlet f = enabled ? formatter : () => String\n\treturn {\n\t\tisColorSupported: enabled,\n\t\treset: f(\"\\x1b[0m\", \"\\x1b[0m\"),\n\t\tbold: f(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\"),\n\t\tdim: f(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\"),\n\t\titalic: f(\"\\x1b[3m\", \"\\x1b[23m\"),\n\t\tunderline: f(\"\\x1b[4m\", \"\\x1b[24m\"),\n\t\tinverse: f(\"\\x1b[7m\", \"\\x1b[27m\"),\n\t\thidden: f(\"\\x1b[8m\", \"\\x1b[28m\"),\n\t\tstrikethrough: f(\"\\x1b[9m\", \"\\x1b[29m\"),\n\n\t\tblack: f(\"\\x1b[30m\", \"\\x1b[39m\"),\n\t\tred: f(\"\\x1b[31m\", \"\\x1b[39m\"),\n\t\tgreen: f(\"\\x1b[32m\", \"\\x1b[39m\"),\n\t\tyellow: f(\"\\x1b[33m\", \"\\x1b[39m\"),\n\t\tblue: f(\"\\x1b[34m\", \"\\x1b[39m\"),\n\t\tmagenta: f(\"\\x1b[35m\", \"\\x1b[39m\"),\n\t\tcyan: f(\"\\x1b[36m\", \"\\x1b[39m\"),\n\t\twhite: f(\"\\x1b[37m\", \"\\x1b[39m\"),\n\t\tgray: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n\n\t\tbgBlack: f(\"\\x1b[40m\", \"\\x1b[49m\"),\n\t\tbgRed: f(\"\\x1b[41m\", \"\\x1b[49m\"),\n\t\tbgGreen: f(\"\\x1b[42m\", \"\\x1b[49m\"),\n\t\tbgYellow: f(\"\\x1b[43m\", \"\\x1b[49m\"),\n\t\tbgBlue: f(\"\\x1b[44m\", \"\\x1b[49m\"),\n\t\tbgMagenta: f(\"\\x1b[45m\", \"\\x1b[49m\"),\n\t\tbgCyan: f(\"\\x1b[46m\", \"\\x1b[49m\"),\n\t\tbgWhite: f(\"\\x1b[47m\", \"\\x1b[49m\"),\n\n\t\tblackBright: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n\t\tredBright: f(\"\\x1b[91m\", \"\\x1b[39m\"),\n\t\tgreenBright: f(\"\\x1b[92m\", \"\\x1b[39m\"),\n\t\tyellowBright: f(\"\\x1b[93m\", \"\\x1b[39m\"),\n\t\tblueBright: f(\"\\x1b[94m\", \"\\x1b[39m\"),\n\t\tmagentaBright: f(\"\\x1b[95m\", \"\\x1b[39m\"),\n\t\tcyanBright: f(\"\\x1b[96m\", \"\\x1b[39m\"),\n\t\twhiteBright: f(\"\\x1b[97m\", \"\\x1b[39m\"),\n\n\t\tbgBlackBright: f(\"\\x1b[100m\", \"\\x1b[49m\"),\n\t\tbgRedBright: f(\"\\x1b[101m\", \"\\x1b[49m\"),\n\t\tbgGreenBright: f(\"\\x1b[102m\", \"\\x1b[49m\"),\n\t\tbgYellowBright: f(\"\\x1b[103m\", \"\\x1b[49m\"),\n\t\tbgBlueBright: f(\"\\x1b[104m\", \"\\x1b[49m\"),\n\t\tbgMagentaBright: f(\"\\x1b[105m\", \"\\x1b[49m\"),\n\t\tbgCyanBright: f(\"\\x1b[106m\", \"\\x1b[49m\"),\n\t\tbgWhiteBright: f(\"\\x1b[107m\", \"\\x1b[49m\"),\n\t}\n}\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n", "'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, content, escape, next, quote\n  let currentToken, escaped, escapePos, n, prev\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n", "'use strict'\n\nlet pico = require('picocolors')\n\nlet tokenizer = require('./tokenize')\n\nlet Input\n\nfunction registerInput(dependant) {\n  Input = dependant\n}\n\nconst HIGHLIGHT_THEME = {\n  ';': pico.yellow,\n  ':': pico.yellow,\n  '(': pico.cyan,\n  ')': pico.cyan,\n  '[': pico.yellow,\n  ']': pico.yellow,\n  '{': pico.yellow,\n  '}': pico.yellow,\n  'at-word': pico.cyan,\n  'brackets': pico.cyan,\n  'call': pico.cyan,\n  'class': pico.yellow,\n  'comment': pico.gray,\n  'hash': pico.magenta,\n  'string': pico.green\n}\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken()\n    processor.back(next)\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenizer(new Input(css), { ignoreErrors: true })\n  let result = ''\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken()\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)]\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n')\n    } else {\n      result += token[1]\n    }\n  }\n  return result\n}\n\nterminalHighlight.registerInput = registerInput\n\nmodule.exports = terminalHighlight\n", "'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n\n    let aside = text => text\n    let mark = text => text\n    let highlight = text => text\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n      if (terminalHighlight) {\n        highlight = text => terminalHighlight(text)\n      }\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n    let maxWidth = String(end).length\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          if (line.length > 160) {\n            let padding = 20\n            let subLineStart = Math.max(0, this.column - padding)\n            let subLineEnd = Math.max(\n              this.column + padding,\n              this.endColumn + padding\n            )\n            let subLine = line.slice(subLineStart, subLineEnd)\n\n            let spacing =\n              aside(gutter.replace(/\\d/g, ' ')) +\n              line\n                .slice(0, Math.min(this.column - 1, padding - 1))\n                .replace(/[^\\t]/g, ' ')\n\n            return (\n              mark('>') +\n              aside(gutter) +\n              highlight(subLine) +\n              '\\n ' +\n              spacing +\n              mark('^')\n            )\n          }\n\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n\n          return (\n            mark('>') +\n            aside(gutter) +\n            highlight(line) +\n            '\\n ' +\n            spacing +\n            mark('^')\n          )\n        }\n\n        return ' ' + aside(gutter) + highlight(line)\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n"],
  "mappings": "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",
  "names": ["require_picocolors", "__commonJSMin", "exports", "module", "p", "argv", "env", "isColorSupported", "formatter", "__name", "open", "close", "replace", "input", "string", "index", "replaceClose", "result", "cursor", "createColors", "enabled", "f", "require_tokenize", "__commonJSMin", "exports", "module", "RE_AT_END", "RE_WORD_END", "RE_BAD_BRACKET", "RE_HEX_ESCAPE", "__name", "input", "options", "css", "ignore", "code", "content", "escape", "next", "quote", "currentToken", "escaped", "escapePos", "n", "prev", "length", "pos", "buffer", "returned", "position", "unclosed", "what", "endOfFile", "nextToken", "opts", "ignoreUnclosed", "controlChar", "back", "token", "require_terminal_highlight", "__commonJSMin", "exports", "module", "pico", "tokenizer", "Input", "registerInput", "dependant", "__name", "HIGHLIGHT_THEME", "getTokenType", "type", "value", "processor", "next", "terminalHighlight", "css", "result", "token", "color", "i", "require_css_syntax_error", "__commonJSMin", "exports", "module", "pico", "terminalHighlight", "CssSyntaxError", "_CssSyntaxError", "__name", "message", "line", "column", "source", "file", "plugin", "color", "css", "aside", "text", "mark", "highlight", "bold", "gray", "red", "lines", "start", "end", "maxWidth", "index", "number", "gutter", "padding", "subLineStart", "subLineEnd", "subLine", "spacing", "code"]
}
