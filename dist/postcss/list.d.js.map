{
  "version": 3,
  "sources": ["../../src/postcss/list.d.ts"],
  "sourcesContent": ["declare namespace list {\n  type List = {\n    /**\n     * Safely splits comma-separated values (such as those for `transition-*`\n     * and `background` properties).\n     *\n     * ```js\n     * Once (root, { list }) {\n     *   list.comma('black, linear-gradient(white, black)')\n     *   //=> ['black', 'linear-gradient(white, black)']\n     * }\n     * ```\n     *\n     * @param str Comma-separated values.\n     * @return Split values.\n     */\n    comma(str: string): string[]\n\n    default: List\n\n    /**\n     * Safely splits space-separated values (such as those for `background`,\n     * `border-radius`, and other shorthand properties).\n     *\n     * ```js\n     * Once (root, { list }) {\n     *   list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']\n     * }\n     * ```\n     *\n     * @param str Space-separated values.\n     * @return Split values.\n     */\n    space(str: string): string[]\n\n    /**\n     * Safely splits values.\n     *\n     * ```js\n     * Once (root, { list }) {\n     *   list.split('1px calc(10% + 1px)', [' ', '\\n', '\\t']) //=> ['1px', 'calc(10% + 1px)']\n     * }\n     * ```\n     *\n     * @param string separated values.\n     * @param separators array of separators.\n     * @param last boolean indicator.\n     * @return Split values.\n     */\n    split(\n      string: string,\n      separators: readonly string[],\n      last: boolean\n    ): string[]\n  }\n}\n\ndeclare const list: list.List\n\nexport = list\n"],
  "mappings": "8DAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CA2DAA,EAAA,QAAS",
  "names": ["require_list_d", "__commonJSMin", "exports", "module"]
}
