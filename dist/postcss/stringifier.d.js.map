{
  "version": 3,
  "sources": ["../../src/postcss/stringifier.d.ts"],
  "sourcesContent": ["import {\n  AnyNode,\n  AtRule,\n  Builder,\n  Comment,\n  Container,\n  Declaration,\n  Document,\n  Root,\n  Rule\n} from './postcss.js'\n\ndeclare namespace Stringifier {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  export { Stringifier_ as default }\n}\n\ndeclare class Stringifier_ {\n  builder: Builder\n  constructor(builder: Builder)\n  atrule(node: AtRule, semicolon?: boolean): void\n  beforeAfter(node: AnyNode, detect: 'after' | 'before'): string\n  block(node: AnyNode, start: string): void\n  body(node: Container): void\n  comment(node: Comment): void\n  decl(node: Declaration, semicolon?: boolean): void\n  document(node: Document): void\n  raw(node: AnyNode, own: null | string, detect?: string): string\n  rawBeforeClose(root: Root): string | undefined\n  rawBeforeComment(root: Root, node: Comment): string | undefined\n  rawBeforeDecl(root: Root, node: Declaration): string | undefined\n  rawBeforeOpen(root: Root): string | undefined\n  rawBeforeRule(root: Root): string | undefined\n  rawColon(root: Root): string | undefined\n  rawEmptyBody(root: Root): string | undefined\n  rawIndent(root: Root): string | undefined\n  rawSemicolon(root: Root): boolean | undefined\n  rawValue(node: AnyNode, prop: string): string\n  root(node: Root): void\n  rule(node: Rule): void\n  stringify(node: AnyNode, semicolon?: boolean): void\n}\n\ndeclare class Stringifier extends Stringifier_ {}\n\nexport = Stringifier\n"],
  "mappings": "8DAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CA6CAA,EAAA,QAAS",
  "names": ["require_stringifier_d", "__commonJSMin", "exports", "module"]
}
